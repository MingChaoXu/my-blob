<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>MCXU</title>
    <link>https://xumingchao.xyz/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>xumingchao&#39;s homepage</description>
    <pubDate>Thu, 16 May 2019 11:44:14 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>hexo+next配置——让自己的博客拥有版权声明</title>
      <link>https://xumingchao.xyz/hexo-next%E9%85%8D%E7%BD%AE%E2%80%94%E2%80%94%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8B%A5%E6%9C%89%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/</link>
      <guid>https://xumingchao.xyz/hexo-next%E9%85%8D%E7%BD%AE%E2%80%94%E2%80%94%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8B%A5%E6%9C%89%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/</guid>
      <pubDate>Thu, 16 May 2019 11:14:02 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;让自己的博客的博客拥有版权声明是一件非常有必要的事，因为这样可以让爬虫爬取自己的博文时，增加自己被搜索到的权重，更重要的是让自己的成果不被别人轻易剽窃！(◎_◎;)下面博主介绍一下，如何利用hexo在next主题下添加自己的版权声明(´▽｀)&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><p>让自己的博客的博客拥有版权声明是一件非常有必要的事，因为这样可以让爬虫爬取自己的博文时，增加自己被搜索到的权重，更重要的是让自己的成果不被别人轻易剽窃！(◎_◎;)下面博主介绍一下，如何利用hexo在next主题下添加自己的版权声明(´▽｀)</p><a id="more"></a><h3 id="新建post-copyright-swig文件"><a href="#新建post-copyright-swig文件" class="headerlink" title="新建post-copyright.swig文件"></a>新建post-copyright.swig文件</h3><p>修改文件<code>themes/next/layout/_macro/post-copyright.swig</code>，若是没有这个文件，则新建他</p><p>复制代码如下，到这个文件中去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;post-copyright&quot;&gt;</span><br><span class="line">&lt;li class=&quot;post-copyright-author&quot;&gt;</span><br><span class="line">    &lt;strong&gt;&#123;&#123; __(&apos;post.copyright.author&apos;) + __(&apos;symbol.colon&apos;) &#125;&#125;&lt;/strong&gt;</span><br><span class="line">    &#123;&#123; post.author | default(config.author) &#125;&#125;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;li class=&quot;post-copyright-link&quot;&gt;</span><br><span class="line">    &lt;strong&gt;&#123;&#123; __(&apos;post.copyright.link&apos;) + __(&apos;symbol.colon&apos;) &#125;&#125;&lt;/strong&gt;</span><br><span class="line">    &lt;a href=&quot;&#123;&#123; post.url | default(post.permalink) &#125;&#125;&quot; title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;&#123;&#123; post.url | default(post.permalink) &#125;&#125;&lt;/a&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;li class=&quot;post-copyright-license&quot;&gt;</span><br><span class="line">    &lt;strong&gt;&#123;&#123; __(&apos;post.copyright.license_title&apos;) + __(&apos;symbol.colon&apos;) &#125;&#125; &lt;/strong&gt;</span><br><span class="line">    &#123;&#123; __(&apos;post.copyright.license_content&apos;, theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><h3 id="打开开关"><a href="#打开开关" class="headerlink" title="打开开关"></a>打开开关</h3><p>在主题配置文件<code>_config.yml</code>中搜索<code>post_copyright</code>，将其属性改为<code>true</code>，若是没有这个属性，则添加这个属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h3 id="内嵌前端代码"><a href="#内嵌前端代码" class="headerlink" title="内嵌前端代码"></a>内嵌前端代码</h3><p>这里提一句如何在hexo博客中内嵌前端代码，我这里实验的<code>codeblock</code>不好使，所以我直接使用markdown的方式插入代码块了，即使用<code>`</code></p><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/hexo-next%E9%85%8D%E7%BD%AE%E2%80%94%E2%80%94%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8B%A5%E6%9C%89%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CVPR2019 PaperReading(2)</title>
      <link>https://xumingchao.xyz/paperreading/</link>
      <guid>https://xumingchao.xyz/paperreading/</guid>
      <pubDate>Thu, 16 May 2019 08:43:56 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;ul&gt;&lt;li&gt;[] &lt;a href=&quot;http://arxiv.org/abs/1809.09478&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Taking A Closer Look at Domain Shift: Category-level Adversaries for Semantics Consistent Domain Adaptation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><ul><li>[] <a href="http://arxiv.org/abs/1809.09478" rel="external nofollow noopener noreferrer" target="_blank">Taking A Closer Look at Domain Shift: Category-level Adversaries for Semantics Consistent Domain Adaptation</a></li></ul><a id="more"></a><div class="note danger"><p>ddddddx</p></div><p>dfasdfaf</p><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/paperreading/#disqus_thread</comments>
    </item>
    
    <item>
      <title>blob迁移教程</title>
      <link>https://xumingchao.xyz/blob%E8%BF%81%E7%A7%BB%E6%95%99%E7%A8%8B/</link>
      <guid>https://xumingchao.xyz/blob%E8%BF%81%E7%A7%BB%E6%95%99%E7%A8%8B/</guid>
      <pubDate>Tue, 14 May 2019 08:53:08 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;日常生活中可能会遇到我们不能在自己的电脑上写博客的情况，hexo搭建的博客由于需要在本地安装相应的包，所以博主写这个博客来记录一下一键迁移的几个步骤o(≧v≦)o&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;首先，从github上clone自己的博客代码，如果不是自己的电脑，建议不用ssh key，这里顺便简单介绍一下ssh key的建立方式：&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cd ~/.ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;your_email@example.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ clip &amp;lt; ~/.ssh/id_rsa.pub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><blockquote><p>日常生活中可能会遇到我们不能在自己的电脑上写博客的情况，hexo搭建的博客由于需要在本地安装相应的包，所以博主写这个博客来记录一下一键迁移的几个步骤o(≧v≦)o</p></blockquote><p>首先，从github上clone自己的博客代码，如果不是自己的电脑，建议不用ssh key，这里顺便简单介绍一下ssh key的建立方式：<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh</span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></span><br><span class="line">$ clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p></p><a id="more"></a><p>把ssh key粘贴到github的密钥中，在setting中找到，测试ssh key是否成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>接下来是正文╮(╯▽╰)╭，clone自己的blob</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git@github.com:MingChaoXu/my-blob.git</span><br></pre></td></tr></table></figure><p>博主的一键安装脚本在这个地方，其实就是把自己需要安装的包写到一个脚本里去，运行脚本即可一键安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git@github.com:MingChaoXu/blob-move.git</span><br></pre></td></tr></table></figure><p>这里插一句题外话，要是git用的不熟的同学简单介绍一下如何做，首先在本地建立一个<code>blob-move</code>的文件夹，然后写相应的脚本<code>blob-move.sh</code>，接下来运行<code>git init</code>命令在本地初始化git，在github上新建一个空的项目<code>blob-move</code>，然后添加远程分支即可并push即可，命令如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com:MingChaoXu/blob-move.git</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">"new shell"</span></span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure><p>言归正传，这时已经有了一键安装的脚本<code>blob-move.sh</code>，把他copy到博客文件夹下，运行如下命令即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo --save</span><br><span class="line">$ hexo init</span><br><span class="line">$ sh blob-move.sh</span><br></pre></td></tr></table></figure><h3 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h3><ul><li><a href="https://www.jianshu.com/p/c04b4f55c38c" rel="external nofollow noopener noreferrer" target="_blank">Hexo搭建GitHub博客—打造炫酷的NexT主题–高级</a></li></ul><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/blob%E8%BF%81%E7%A7%BB%E6%95%99%E7%A8%8B/#disqus_thread</comments>
    </item>
    
    <item>
      <title>马克飞象</title>
      <link>https://xumingchao.xyz/%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1/</link>
      <guid>https://xumingchao.xyz/%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1/</guid>
      <pubDate>Thu, 09 May 2019 05:59:42 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;由于这篇马克飞象的教程有markdown的语法，博主实在是懒，就摘过来了，方便自己查找&lt;/p&gt;&lt;/blockquote&gt;&lt;h1 id=&quot;欢迎使用马克飞象&quot;&gt;&lt;a href=&quot;#欢迎使用马克飞象&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用马克飞象&quot;&gt;&lt;/a&gt;欢迎使用马克飞象&lt;/h1&gt;&lt;p&gt;@(收集箱)[马克飞象, 帮助, Markdown]&lt;/p&gt;&lt;p&gt;&lt;strong&gt;马克飞象&lt;/strong&gt;是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><blockquote><p>由于这篇马克飞象的教程有markdown的语法，博主实在是懒，就摘过来了，方便自己查找</p></blockquote><h1 id="欢迎使用马克飞象"><a href="#欢迎使用马克飞象" class="headerlink" title="欢迎使用马克飞象"></a>欢迎使用马克飞象</h1><p>@(收集箱)[马克飞象, 帮助, Markdown]</p><p><strong>马克飞象</strong>是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：</p><a id="more"></a><ul><li><strong>功能丰富</strong> ：支持高亮代码块、<em>LaTeX</em> 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；</li><li><strong>得心应手</strong> ：简洁高效的编辑器，提供<a href="http://maxiang.info/client_zh" rel="external nofollow noopener noreferrer" target="_blank">桌面客户端</a>以及<a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop" rel="external nofollow noopener noreferrer" target="_blank">离线Chrome App</a>，支持移动端 Web；</li><li><strong>深度整合</strong> ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。</li></ul><hr><p>[TOC]</p><h2 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h2><blockquote><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— <a href="https://zh.wikipedia.org/wiki/Markdown" rel="external nofollow noopener noreferrer" target="_blank">维基百科</a></p></blockquote><p>正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为<strong>粗体</strong>或者<em>斜体</em>，创建一个<a href="http://www.example.com" rel="external nofollow noopener noreferrer" target="_blank">链接</a>或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按<code>Ctrl + /</code>查看帮助。</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="string">'''A docstring'''</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt'''</span></span><br></pre></td></tr></table></figure><h3 id="LaTeX-公式"><a href="#LaTeX-公式" class="headerlink" title="LaTeX 公式"></a>LaTeX 公式</h3><p>可以创建行内公式，例如 $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$。或者块级公式：</p><p>$$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><table><thead><tr><th style="text-align:left">Item</th><th style="text-align:right">Value</th><th style="text-align:center">Qty</th></tr></thead><tbody><tr><td style="text-align:left">Computer</td><td style="text-align:right">1600 USD</td><td style="text-align:center">5</td></tr><tr><td style="text-align:left">Phone</td><td style="text-align:right">12 USD</td><td style="text-align:center">12</td></tr><tr><td style="text-align:left">Pipe</td><td style="text-align:right">1 USD</td><td style="text-align:center">234</td></tr></tbody></table><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">e=&gt;end</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><p>以及时序图:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><blockquote><p><strong>提示：</strong>想了解更多，请查看<strong>流程图</strong><a href="http://adrai.github.io/flowchart.js/" rel="external nofollow noopener noreferrer" target="_blank">语法</a>以及<strong>时序图</strong><a href="http://bramp.github.io/js-sequence-diagrams/" rel="external nofollow noopener noreferrer" target="_blank">语法</a>。</p></blockquote><h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><p>使用 <code>- [ ]</code> 和 <code>- [x]</code> 语法可以创建复选框，实现 todo-list 等功能。例如：</p><ul><li style="list-style:none"><input type="checkbox" checked> 已完成事项</li><li style="list-style:none"><input type="checkbox"> 待办事项1</li><li style="list-style:none"><input type="checkbox"> 待办事项2</li></ul><blockquote><p><strong>注意：</strong>目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在<strong>马克飞象</strong>中修改 Markdown 原文才可生效。下个版本将会全面支持。</p></blockquote><p>[^demo]: 这是一个示例脚注。请查阅 <a href="https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes" rel="external nofollow noopener noreferrer" target="_blank">MultiMarkdown 文档</a> 关于脚注的说明。 <strong>限制：</strong> 印象笔记的笔记内容使用 <a href="https://dev.yinxiang.com/doc/articles/enml.php" rel="external nofollow noopener noreferrer" target="_blank">ENML</a> 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致<code>脚注</code>和<code>TOC</code>无法正常点击。</p><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>No module named &#39;warpctc_pytorch._warp_ctc&#39;</title>
      <link>https://xumingchao.xyz/warp-ctc/</link>
      <guid>https://xumingchao.xyz/warp-ctc/</guid>
      <pubDate>Thu, 09 May 2019 05:50:10 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;因为新装了一个环境，需要重装warp_ctc，但是官方的教程一直都不通&lt;/p&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/SeanNaren/warp-ctc.git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><p>因为新装了一个环境，需要重装warp_ctc，但是官方的教程一直都不通</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/SeanNaren/warp-ctc.git</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">import</span> warpctc_pytorch</span><br><span class="line">ModuleNotFoundError: No module named <span class="string">'warpctc_pytorch._warp_ctc'</span></span><br></pre></td></tr></table></figure><p>网上的教程怎么试都不行，后来一想，难道试版本问题，我查了一下我以前使用的版本，回退回去重新安装果然可以了！凸^-^凸<br>这里记录下我使用的warpctc版本id<br><strong>ac045b6072b9bc3454fb9f9f17674f0d59373789</strong></p><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/warp-ctc/#disqus_thread</comments>
    </item>
    
    <item>
      <title>numpy.core.multiarray failed to import</title>
      <link>https://xumingchao.xyz/import/</link>
      <guid>https://xumingchao.xyz/import/</guid>
      <pubDate>Thu, 09 May 2019 05:36:14 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;在某次运行pytorch程序时突然报关于numpy的错误&lt;/p&gt;&lt;/blockquote&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; torch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ImportError: numpy.core.multiarray failed to &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><blockquote><p>在某次运行pytorch程序时突然报关于numpy的错误</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">import</span> torch</span><br><span class="line">ImportError: numpy.core.multiarray failed to <span class="keyword">import</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>网上搜了很多教程，大家的意见基本是用pip重新装一遍，运行代码如下：<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pip install -U numpy</span><br></pre></td></tr></table></figure><p></p><p>但是我怎么试都不好使呀(╯°□°）╯︵ ┻━┻。后来在github issue里看见一个人说他卸了两次，我灵机一动，会不会是我安装的numpy版本太多了。所以我一直<code>pip uninstall numpy</code>, 然后再重装就OK了</p><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/import/#disqus_thread</comments>
    </item>
    
    <item>
      <title>mac制作gif</title>
      <link>https://xumingchao.xyz/mac%E5%88%B6%E4%BD%9Cgif/</link>
      <guid>https://xumingchao.xyz/mac%E5%88%B6%E4%BD%9Cgif/</guid>
      <pubDate>Tue, 07 May 2019 11:41:14 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;h3 id=&quot;如何用Mac自带的QuickTime-Player录制视频并制作GIF动图&quot;&gt;&lt;a href=&quot;#如何用Mac自带的QuickTime-Player录制视频并制作GIF动图&quot; class=&quot;headerlink&quot; title=&quot;如何用Mac自带的QuickTime Player录制视频并制作GIF动图&quot;&gt;&lt;/a&gt;如何用Mac自带的QuickTime Player录制视频并制作GIF动图&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;一直想要制作GIF来提升自己的文章质量，或者表情包质量(◐‿◑)﻿，今天休息的时候抽空研究了一下，写下这篇教程&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 id=&quot;1-通过QuickTime录制视频&quot;&gt;&lt;a href=&quot;#1-通过QuickTime录制视频&quot; class=&quot;headerlink&quot; title=&quot;1.通过QuickTime录制视频&quot;&gt;&lt;/a&gt;1.通过QuickTime录制视频&lt;/h4&gt;&lt;p&gt;在file下拉菜单中选择新建屏幕录制，然后开始录制视频&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://pqxeslx06.bkt.clouddn.com/quicktime.png&quot; width=&quot;200&quot; height=&quot;120&quot; div align=&quot;center&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><h3 id="如何用Mac自带的QuickTime-Player录制视频并制作GIF动图"><a href="#如何用Mac自带的QuickTime-Player录制视频并制作GIF动图" class="headerlink" title="如何用Mac自带的QuickTime Player录制视频并制作GIF动图"></a>如何用Mac自带的QuickTime Player录制视频并制作GIF动图</h3><blockquote><p>一直想要制作GIF来提升自己的文章质量，或者表情包质量(◐‿◑)﻿，今天休息的时候抽空研究了一下，写下这篇教程</p></blockquote><h4 id="1-通过QuickTime录制视频"><a href="#1-通过QuickTime录制视频" class="headerlink" title="1.通过QuickTime录制视频"></a>1.通过QuickTime录制视频</h4><p>在file下拉菜单中选择新建屏幕录制，然后开始录制视频</p><p><img src="http://pqxeslx06.bkt.clouddn.com/quicktime.png" width="200" height="120" div align="center"></p><a id="more"></a><h4 id="2-通过QuickTime剪辑视频"><a href="#2-通过QuickTime剪辑视频" class="headerlink" title="2.通过QuickTime剪辑视频"></a>2.通过QuickTime剪辑视频</h4><p>用quicktime打开保存的视频，在view下拉菜单下选择显示剪辑<br><img src="http://pqxeslx06.bkt.clouddn.com/quicktime2.png" width="220" height="200" div align="center"></p><p>双击进度条，可以剪辑自己想要的部分。<br><img src="http://pqxeslx06.bkt.clouddn.com/quicktime3.png" div align="center"></p><h4 id="3-视频转GIF"><a href="#3-视频转GIF" class="headerlink" title="3.视频转GIF"></a>3.视频转GIF</h4><p>这里我主要是用的这个<a href="https://www.online-convert.com/" rel="external nofollow noopener noreferrer" target="_blank">网站</a>免费转换，但是只能转100M以下的视频，利用Google账户登录就行</p><p><img src="http://pqxeslx06.bkt.clouddn.com/GIF_convert.png" div align="center"></p><p>下面展示以下我的成果哈哈哈(´▽｀)</p><p>这个屏幕的GIF尺寸适合450*330<br><img src="http://pqxeslx06.bkt.clouddn.com/gui.gif" div align="center"></p><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/mac%E5%88%B6%E4%BD%9Cgif/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo瞎折腾系列——seo优化</title>
      <link>https://xumingchao.xyz/hexo%E7%9E%8E%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94seo%E4%BC%98%E5%8C%96/</link>
      <guid>https://xumingchao.xyz/hexo%E7%9E%8E%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94seo%E4%BC%98%E5%8C%96/</guid>
      <pubDate>Mon, 06 May 2019 16:02:42 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;晚上吃完晚饭休息的时候继续瞎折腾，博客基本功能基本健全，但是总体体验感觉速度较慢，所以对网站做了优化╮(╯▽╰)╭，主要是一下两点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;双线路解析&lt;/li&gt;&lt;li&gt;代码压缩&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><blockquote><p>晚上吃完晚饭休息的时候继续瞎折腾，博客基本功能基本健全，但是总体体验感觉速度较慢，所以对网站做了优化╮(╯▽╰)╭，主要是一下两点：</p><ul><li>双线路解析</li><li>代码压缩</li></ul></blockquote><a id="more"></a><h3 id="双线路解析"><a href="#双线路解析" class="headerlink" title="双线路解析"></a>双线路解析</h3><p>由于之前是把博客代码托管到github上，在国内上网比较慢，所以采用双线路解析的方式，在国内通过coding来托管，境外通过github pages解析，但是这个实现过程中遇到了一个bug！(◎_◎;)，就是我在coding pages上换成自己域名时ssl证书验证不通过。<br>解决方法是，先把域名解析的国外的对应条例给暂停一下，然后再重新验证，这时候coding就可以验证通过了，然后再重新打开。</p><h3 id="代码压缩"><a href="#代码压缩" class="headerlink" title="代码压缩"></a>代码压缩</h3><p>hexo生成的html代码中有大量的空白，代码可以进行压缩，从而达到加速的目的。这里我当然是选择最简单的方法啦，谁让我懒呢(@_@)</p><h4 id="hexo-neat-插件"><a href="#hexo-neat-插件" class="headerlink" title="hexo neat 插件"></a>hexo neat 插件</h4><p>安装neat插件<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-neat --save</span></span><br></pre></td></tr></table></figure><p></p><p>打开站点配置文件，添加以下属性, 可以选择是否压缩HTML、CSS、Js文件，均有相应的开关选项。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> hexo-neat</span></span><br><span class="line"></span><br><span class="line">neat_enable: true</span><br><span class="line"></span><br><span class="line">neat_html:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">  </span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - '*.min.css'</span><br><span class="line"></span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - '*.min.js'</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/hexo%E7%9E%8E%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94seo%E4%BC%98%E5%8C%96/#disqus_thread</comments>
    </item>
    
    <item>
      <title>pytorch--并行bug</title>
      <link>https://xumingchao.xyz/pytorch-%E5%B9%B6%E8%A1%8Cbug/</link>
      <guid>https://xumingchao.xyz/pytorch-%E5%B9%B6%E8%A1%8Cbug/</guid>
      <pubDate>Mon, 06 May 2019 02:21:13 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;官方版本的pytorch 并行方式一般使用下面这种方式：&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; id = &lt;span class=&quot;string&quot;&gt;&#39;0,1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; model = nn.DataParallel(model, device_ids=id) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><p>官方版本的pytorch 并行方式一般使用下面这种方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; id = <span class="string">'0,1'</span></span><br><span class="line">&gt; model = nn.DataParallel(model, device_ids=id) </span><br></pre></td></tr></table></figure><a id="more"></a><p>这种并行方式主程序只会运行一次，并在跑模型前向的时候自动把batch平分到各卡，这就带来一个问题，当模型有两个输入时，例如一个batch为32，1个batch为2，假如用4卡并行，会出现第一个输入均分到各卡上是batch为8的tensor，但是第二个输入会有卡分配不到tensor，这时候程序会报错。我理解的错误是由这个原因导致的，解决办法也许是换一种并行方式，利用broudcast整个各卡信息。</p><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/pytorch-%E5%B9%B6%E8%A1%8Cbug/#disqus_thread</comments>
    </item>
    
    <item>
      <title>pytorch调试记录(1)</title>
      <link>https://xumingchao.xyz/pytorch%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/</link>
      <guid>https://xumingchao.xyz/pytorch%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/</guid>
      <pubDate>Sun, 05 May 2019 08:56:25 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;昨天调试pytorch 并行的时候发现一个以前没有注意到的细节&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; id = &lt;span class=&quot;string&quot;&gt;&#39;0,1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; torch.device(id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; tensor.to(id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; model = nn.DataParallel(model, device_ids=id) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><p>昨天调试pytorch 并行的时候发现一个以前没有注意到的细节</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; id = <span class="string">'0,1'</span></span><br><span class="line">&gt; torch.device(id)</span><br><span class="line">&gt; tensor.to(id)</span><br><span class="line">&gt; model = nn.DataParallel(model, device_ids=id) </span><br></pre></td></tr></table></figure><a id="more"></a><p>这里的device和实际显卡的id并不对应，想要和实际显卡id对应，可以通过下面这种方式对应</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; id = <span class="number">2</span></span><br><span class="line">&gt; torch.cuda.set_device(id)</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; os.environ[<span class="string">"CUDA_DEVICE_ORDER"</span>] = <span class="string">'2,3'</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/pytorch%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>blob收录踩坑</title>
      <link>https://xumingchao.xyz/blob%E6%94%B6%E5%BD%95%E8%B8%A9%E5%9D%91/</link>
      <guid>https://xumingchao.xyz/blob%E6%94%B6%E5%BD%95%E8%B8%A9%E5%9D%91/</guid>
      <pubDate>Fri, 03 May 2019 08:27:56 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;本篇文章简单记录一下博客网站优化过程中的踩坑点&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&quot;更换域名&quot;&gt;&lt;a href=&quot;#更换域名&quot; class=&quot;headerlink&quot; title=&quot;更换域名&quot;&gt;&lt;/a&gt;更换域名&lt;/h3&gt;&lt;p&gt;博客搭建完的第二天，我手痒（ーー；）又花了一段时间搞了域名迁移与seo优化。╮(╯▽╰)╭，接下来简单讲一下过程中遇到的一些坑点。&lt;br&gt;首先说把博客从github pages上迁移到自己到域名上，之前没有买过域名，网上都说国内建议买阿里云的域名，我搜了一下感觉价格略贵，学生党并不想多花钱(T ^ T)，但是百度给我推送的腾讯云刚好有打折活动，xyz的域名新用户1年只要1元，买了啊！&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><blockquote><p>本篇文章简单记录一下博客网站优化过程中的踩坑点</p></blockquote><h3 id="更换域名"><a href="#更换域名" class="headerlink" title="更换域名"></a>更换域名</h3><p>博客搭建完的第二天，我手痒（ーー；）又花了一段时间搞了域名迁移与seo优化。╮(╯▽╰)╭，接下来简单讲一下过程中遇到的一些坑点。<br>首先说把博客从github pages上迁移到自己到域名上，之前没有买过域名，网上都说国内建议买阿里云的域名，我搜了一下感觉价格略贵，学生党并不想多花钱(T ^ T)，但是百度给我推送的腾讯云刚好有打折活动，xyz的域名新用户1年只要1元，买了啊！</p><a id="more"></a><p>一通注册操作后，来到了域名管理的后台，主要是需要域名解析的操作，中间涉及到cname解析等等，这些网上一些大牛们都有教程，我就不赘述了。花时间的主要原因是不熟练。<br>另外在换域名的过程中，url的设置可以加上https:\\，(自行对应)。<br>hexo 生成并发布的过程中，我发现github上的common网址每次刷新都会变回$github.io$，每次刷新好麻烦呀！┻━┻︵╰(‵□′)╯︵┻━┻，搜教程发现只需要在站点的source文件夹下加入一个CNAME文件即可，看清楚，是CNAME，而不是CHAME！我第一次写错了，来回找错误没找到，折腾好久发现文件名写错了(╯‵□′)╯︵┻━┻，改完之后每次上传就可以自动更新site网址啦～</p><h3 id="收录博客网址"><a href="#收录博客网址" class="headerlink" title="收录博客网址"></a>收录博客网址</h3><p>接下来就是让自己的博客可以被百度和谷歌收录啦，生命在于折腾，呦吼吼（≧∇≦）<br>这里面遇到了挺多坑的，按着教程走也挺慢才走通。首先，在被百度收录的过程中，在添加网址时，百度搞出了新花样！需要注册熊掌id，但是在注册过程中要用到手机端的百度app人脸验证（度娘这波广告打得好）。不过这里面需要吐槽一下，百度的这个人脸验证可能时刚出来不久，功能使用体验很差（ーー；），摄像头调用还经常失败，黑屏，延迟，卡顿什么的低级bug常发生，总之就是按照他的流程我走了n遍才验证通过(╯°□°）╯︵ ┻━┻，用户体验较差。接下来就是提交站点地图了，这里面看教程有一个误解，我使用的时cname验证，因为容易嘛，但是要注意主机记录是复制的前面那一串字符串，后面的域名就不要复制了，腾讯云的dns解析会自动给加上，拿我的举例，就是把$.xumingchao.xyz$给去掉。其他就没有什么坑了，还有一点就是百度的sitemap加进去后反应真慢，看了一下博客发现这是正常现象，反正我现在还没有通过。<br>Google收录的过程中，主要遇到的坑是，Google的search console更新版本了，之前的收录方式对应不上了，不过我自己摸索着使用文件验证成功收录了<a href="https://xumingchao.xyz">https://xumingchao.xyz</a>，但是<a href="https://xumingchao.xyz">xumingchao.xyz</a>只能用dns配置来收录验证，这里面我是个小白，什么都不懂，暂时也没有搞通，以后再搞吧</p><p><img src="http://pqxeslx06.bkt.clouddn.com/dognotsay.jpeg-style1" width="250" height="200" div align="center"></p><h3 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h3><ul><li><a href="https://blog.csdn.net/sunshine940326/article/details/70936988/" rel="external nofollow noopener noreferrer" target="_blank">hexo高阶教程：想让你的博客被更多的人在搜索引擎中搜到吗？</a></li><li><a href="http://www.yuan-ji.me/Hexo-%E4%BC%98%E5%8C%96%EF%BC%9A%E6%8F%90%E4%BA%A4sitemap%E5%8F%8A%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E7%88%AC%E8%99%AB%E6%8A%93%E5%8F%96-GitHub-Pages-%E9%97%AE%E9%A2%98/" rel="external nofollow noopener noreferrer" target="_blank">Hexo-优化：提交sitemap及解决百度爬虫抓取-GitHub-Pages-问题</a></li><li><a href="https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/" rel="external nofollow noopener noreferrer" target="_blank">Hexo插件之百度主动提交链接</a></li></ul><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/blob%E6%94%B6%E5%BD%95%E8%B8%A9%E5%9D%91/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CVPR2019 PaperReading(1)</title>
      <link>https://xumingchao.xyz/PaperReading/</link>
      <guid>https://xumingchao.xyz/PaperReading/</guid>
      <pubDate>Thu, 02 May 2019 06:37:57 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;ul&gt;&lt;li style=&quot;list-style:none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; &lt;strong&gt;On the Structural Sensitivity of Deep Convolutional Networks to the Directions of Fourier Basis Functions&lt;/strong&gt;&lt;/li&gt;&lt;li style=&quot;list-style:none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; &lt;strong&gt;Striking the Right Balance with Uncertainty&lt;/strong&gt;&lt;/li&gt;&lt;li style=&quot;list-style:none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; &lt;strong&gt;NM-Net: Mining Reliable Neighbors for Robust Feature Correspondences&lt;/strong&gt;&lt;/li&gt;&lt;li style=&quot;list-style:none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; &lt;strong&gt;C2AE: Class Conditioned Auto-Encoder for Open-set Recognition&lt;/strong&gt;&lt;/li&gt;&lt;li style=&quot;list-style:none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; &lt;strong&gt;Doodle to Search: Practical Zero-Shot Sketch-based Image Retrieval&lt;/strong&gt;&lt;/li&gt;&lt;li style=&quot;list-style:none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; &lt;strong&gt;Zero-Shot Task Transfer&lt;/strong&gt;&lt;/li&gt;&lt;li style=&quot;list-style:none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; &lt;strong&gt;C-MIL: Continuation Multiple Instance Learning for Weakly Supervised Object Detection&lt;/strong&gt;&lt;/li&gt;&lt;li style=&quot;list-style:none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; &lt;strong&gt;Transferrable Prototypical Networks for Unsupervised Domain Adaptation&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><ul><li style="list-style:none"><input type="checkbox"> <strong>On the Structural Sensitivity of Deep Convolutional Networks to the Directions of Fourier Basis Functions</strong></li><li style="list-style:none"><input type="checkbox"> <strong>Striking the Right Balance with Uncertainty</strong></li><li style="list-style:none"><input type="checkbox" checked> <strong>NM-Net: Mining Reliable Neighbors for Robust Feature Correspondences</strong></li><li style="list-style:none"><input type="checkbox" checked> <strong>C2AE: Class Conditioned Auto-Encoder for Open-set Recognition</strong></li><li style="list-style:none"><input type="checkbox"> <strong>Doodle to Search: Practical Zero-Shot Sketch-based Image Retrieval</strong></li><li style="list-style:none"><input type="checkbox" checked> <strong>Zero-Shot Task Transfer</strong></li><li style="list-style:none"><input type="checkbox"> <strong>C-MIL: Continuation Multiple Instance Learning for Weakly Supervised Object Detection</strong></li><li style="list-style:none"><input type="checkbox"> <strong>Transferrable Prototypical Networks for Unsupervised Domain Adaptation</strong></li></ul><a id="more"></a><h3 id="Zero-Shot-Task-Transfer"><a href="#Zero-Shot-Task-Transfer" class="headerlink" title="Zero-Shot Task Transfer"></a><a href="http://arxiv.org/abs/1903.01092" rel="external nofollow noopener noreferrer" target="_blank">Zero-Shot Task Transfer</a></h3><blockquote><p>这篇文章是针对zero shot的任务提出了一个新的meta learning的算法——TTNet。<br>这个meta-learner 学习模型参数时从有ground truth的已知任务来迁移到新的zero-shot任务中来。<br>本篇paper是做的taskonomy的zero-shot任务，以下4个任务作为zero-shot:</p><ul><li>surface-normal</li><li>room layout</li><li>depth</li><li>camera pose estimation</li></ul></blockquote><h4 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h4><p>定义已知ground truth的m个task为${\tau_{1},…,\tau_{m}}$, zero-shot task为${\tau_{m+1},…,\tau_{K}}$.<br>用多任务学习的方法，将需要学习的meta-learning function $F(.)$建模为有m个branches的network，参数分别为${W_{1},…,W_{m}}$，这些任务分支在开头没有联系，在后面通过一个$W_{common}$的block来coupled。<br>因此，$F(.)$可以分为两个部分，第一个部分是m个$W_{i}s$，第二个部分是$W_{common}$。</p><p><strong>疑问点：</strong></p><ol><li>本篇paper的TTnet是生成data networl的framework，但是不同的zero shot task的decoder不一样，这一点是如何保证可以生成的呢？</li><li>这个work可以transfer到zero-shot的task上，我理解的关键之处在于两点：<ol><li>任务间的相关矩阵，这个是通过DB算法计算出来的，由30个志愿者打分提供得分依赖</li><li>训练时的transfer model可以让模型学习到transfer的特性<br><del>但是我并没有看到TTnet利用到zero-shot任务的数据</del>，这些任务的数据都是一样的，只是zero-shot没有相应的ground truth</li></ol></li></ol><p><strong>其他细节见paper</strong></p><hr><h3 id="C2AE-Class-Conditioned-Auto-Encoder-for-Open-set-Recognition"><a href="#C2AE-Class-Conditioned-Auto-Encoder-for-Open-set-Recognition" class="headerlink" title="C2AE: Class Conditioned Auto-Encoder for Open-set Recognition"></a><a href="http://arxiv.org/abs/1904.01198" rel="external nofollow noopener noreferrer" target="_blank">C2AE: Class Conditioned Auto-Encoder for Open-set Recognition</a></h3><blockquote><p>这篇paper做的是open-set recognition，zero-shot相关的工作，中规中矩的unseen class分类。开放集识别是近两年一个特别新，且有实际研究价值的方向。作者提出了一个class conditioned auto-encoders的方法，训练过程中分为两个子任务：</p><ol><li>closed-set classification</li><li>open-set identification(区分known还是unknown的class)</li></ol><p>encoder 用closed-set分类任务的pipeline学习第一个子任务，decoder通过条件重构class identity来学习第二个子任务。</p></blockquote><hr><h3 id="NM-Net-Mining-Reliable-Neighbors-for-Robust-Feature-Correspondences"><a href="#NM-Net-Mining-Reliable-Neighbors-for-Robust-Feature-Correspondences" class="headerlink" title="NM-Net: Mining Reliable Neighbors for Robust Feature Correspondences"></a><a href="http://arxiv.org/abs/1904.00320" rel="external nofollow noopener noreferrer" target="_blank">NM-Net: Mining Reliable Neighbors for Robust Feature Correspondences</a></h3><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/PaperReading/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://xumingchao.xyz/hello-world/</link>
      <guid>https://xumingchao.xyz/hello-world/</guid>
      <pubDate>Wed, 01 May 2019 12:32:30 GMT</pubDate>
      <description>
      
        &lt;!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jun 26 2019 23:25:15 GMT+0800 (GMT+08:00) --><p>Welcome to <a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" rel="external nofollow noopener noreferrer" target="_blank">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" rel="external nofollow noopener noreferrer" target="_blank">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" rel="external nofollow noopener noreferrer" target="_blank">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" rel="external nofollow noopener noreferrer" target="_blank">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" rel="external nofollow noopener noreferrer" target="_blank">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" rel="external nofollow noopener noreferrer" target="_blank">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" rel="external nofollow noopener noreferrer" target="_blank">Deployment</a></p><!-- rebuild by neat -->]]></content:encoded>
      
      <comments>https://xumingchao.xyz/hello-world/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
